F1 down : [ NT - 1 + 3(i+1) : NT - 1 + 3(i + 2)] 
F1 up   : [ NT - 1 - 3i : NT - 1 + 3 ( 1 - i)]

F2 down : [ NT + 1+ 3i : NT + 1 + 3(i + 1)]
F2 up   : [ NT - 2 - 3i : NT - 2 + 3(1 - idx)]


F1 : -1 / +2 
F2 : -2 / +1

F1 dup = nt + 2
F1 ddown = nt + 1

F2 dup = nt + 1
F2 ddown = nt + 2


Ne pas aller chercher en amont plus loin que first.codon.idx ( on veut pas d√©passer le STOP en amont de l'aORF ) 
ou qu'un seuil arbitraire 